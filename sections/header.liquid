<link rel="stylesheet" href="{{ 'component-list-menu.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="{{ 'component-search.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="{{ 'component-menu-drawer.css' | asset_url }}" media="print" onload="this.media='all'">
<link
  rel="stylesheet"
  href="{{ 'component-cart-notification.css' | asset_url }}"
  media="print"
  onload="this.media='all'"
>

{%- if settings.predictive_search_enabled -%}
  <link rel="stylesheet" href="{{ 'component-price.css' | asset_url }}" media="print" onload="this.media='all'">
{%- endif -%}

{%- if section.settings.menu_type_desktop == 'mega' -%}
  <link rel="stylesheet" href="{{ 'component-mega-menu.css' | asset_url }}" media="print" onload="this.media='all'">
{%- endif -%}

<style>
  header-drawer {
    justify-self: start;
    margin-left: -1.2rem;
  }

  .header__container {
    flex-direction: column;
    gap: 45px;
  }

  .header__container--mobile {
    display: flex;
    padding: 32px 16px;
  }

  .header__container--desktop {
    display: none;
  }

  .header__heading {
    margin: 0 auto;
  }

  .header__logo {
    width: 150px;
  }

  .header__content {
    display: flex;
    align-items: center;
    gap: 12px;
    width: 100%;
  }

  .header__user {
    flex: 1;
    display: flex;
    justify-content: flex-end;
    align-items: center;
    padding-bottom: 12px;
    gap: 32px;
  }

  .header__user a {
    font-size: var(--font-size-md);
  }

  .header__user-actions {
    display: flex;
    gap: 16px;
    font-size: 14px;
    padding-bottom: 8px;
  }

  .header__user-actions a {
    text-decoration: none;
    color: var(--color-text);
    white-space: nowrap;
  }

  .header__user-icons {
    display: flex;
    gap: 32px;
  }

  .header__nav {
    display: flex;
    justify-content: space-between;
    width: 100%;
    margin: 0 auto;
  }

  .header__nav-item {
    font-size: var(--font-size-lg);
    padding: 0 16px;
    position: relative;
  }

  .header__nav-dropdown {
    width: max-content;
    padding: 75px 50px 45px;
    position: absolute;
    left: 0;
    background-color: var(--white);
    gap: 28px;
    display: flex;
    flex-direction: column;
    opacity: 0;
    transform: translateY(-10px);
    visibility: hidden;
    transition: opacity 0.3s ease, transform 0.3s ease, visibility 0.3s ease;
  }

  .header__nav-dropdown-item,
  .drawer__nav-dropdown-item {
    max-width: max-content;
  }

  .header__nav-dropdown-link:after,
  .drawer__nav-dropdown-link:after {
    transition: all ease-in-out 0.2s;
    background: none repeat scroll 0 0 var(--yellow);
    content: '';
    display: block;
    height: 5px;
    width: 0;
  }

  .header__nav-dropdown-link:hover::after {
    width: 100%;
  }

  .header__nav-item:hover .header__nav-dropdown {
    visibility: visible;
    opacity: 1;
    transform: translateY(0);
  }

  .menu-drawer-container {
    display: flex;
  }

  .header__content .menu-drawer__menu {
    list-style: none;
    padding: 0;
  }

  .navbar-wrapper {
    display: none;
    justify-content: space-between;
    align-items: center;
    color: #fff;
    padding: 0 5em;
    margin: 0 auto;
    width: 100%;
  }

  .navbar-wrapper .header__inline-menu {
    display: block;
    width: 100%;
  }

  .navbar-wrapper .list-menu {
    display: flex;
    white-space: nowrap;
    justify-content: space-evenly;
  }

  .navbar-wrapper .header__submenu {
    padding: 50px;
    width: max-content;
    border: none;
  }

  .navbar-wrapper .header__submenu .list-menu__item {
    padding: 16px 0;
    text-decoration-color: var(--color-primary);
    text-decoration-thickness: 5px;
  }

  .navbar-wrapper .link {
    font-size: 16px;
  }

  details[open] > .header__submenu {
    z-index: 10;
    flex-direction: column;
  }

  .navbar-wrapper details[open] > .header__menu-item,
  .navbar-wrapper .header__menu-item:hover span {
    text-decoration: none;
  }

  .navbar-logo img {
    max-height: 50px;
  }

  .navbar-links {
    list-style: none;
    display: flex;
    gap: 1rem;
  }

  .navbar-links a {
    color: #fff;
    text-decoration: none;
  }

  .navbar-links a:hover {
    text-decoration: underline;
  }

  .cart-icon {
    position: relative;
  }

  @media (min-width: 1024px) {
    .header__search {
      padding-bottom: 16px;
      flex: 1;
    }

    .header__container--mobile {
      display: none;
    }

    .header__container--desktop {
      display: flex;
      padding-top: 40px;
    }

    .header__content {
      justify-content: space-between;
      align-items: flex-end;
    }

    .header__logo {
      width: 250px;
      margin: 0 auto;
    }

    .header__nav {
      padding: 0;
      justify-content: space-evenly;
    }

    header-drawer {
      display: none;
    }
    .navbar-wrapper {
      display: flex;
    }
  }

  @media (min-width: 1920px) {
    .header__logo {
      width: 400px;
    }

    .header__container--desktop {
      padding: 40px 150px 32px;
    }

    .header__nav {
      padding: 0 180px;
      justify-content: space-between;
    }
  }
</style>

{%- style -%}
  .header {
    padding: {{ section.settings.padding_top | times: 0.5 | round: 0 }}px 3rem {{ section.settings.padding_bottom | times: 0.5 | round: 0 }}px 3rem;
  }

  .section-header {
    position: sticky; /* This is for fixing a Safari z-index issue. PR #2147 */
    margin-bottom: {{ section.settings.margin_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-header {
      margin-bottom: {{ section.settings.margin_bottom }}px;
    }
  }

  @media screen and (min-width: 1024px) {
    .header {
      padding-top: 2.5em
    }
  }
{%- endstyle -%}

<script src="{{ 'cart-notification.js' | asset_url }}" defer="defer"></script>

<header class="header__section">
  <!-- Mobile Header -->
  <div class="container header__container header-wrapper header__container--mobile">
    <div class="header__content page-width drawer-menu{% if section.settings.menu != blank %} header--has-menu{% endif %}">
      {%- liquid
        if section.settings.menu != blank
          render 'header-drawer'
          render 'header-search', input_id: 'Search-In-Modal'
        endif
      -%}
      {%- if request.page_type == 'index' -%}
        <h1 class="header__heading">
      {%- endif -%}
      <a href="{{ routes.root_url }}" class="header__heading-link link link--text focus-inset">
        {%- if settings.logo != blank -%}
          {%- assign logo_alt = settings.logo.alt | default: shop.name | escape -%}
          {%- assign logo_height = 150 | divided_by: settings.logo.aspect_ratio -%}
          {% capture sizes %}(max-width: {{ 150 | times: 2 }}px) 50vw, {{ 150 }}px{% endcapture %}
          <img
            class="header__logo"
            src="{{ settings.logo | image_url }}"
            alt="{{ logo_alt }}"
            width="{{ 150 }}"
            height="{{ logo_height }}"
            sizes="{{ sizes }}"
            loading="lazy"
          >
        {%- else -%}
          <span class="h2">{{ shop.name }}</span>
        {%- endif -%}
      </a>
      {%- if request.page_type == 'index' -%}
        </h1>
      {%- endif -%}

      <a href="#" class="link focus-inset">
        <span class="svg-wrapper">
          {{- 'icon-wishlist-koibird.svg' | inline_asset_content -}}
        </span>
        <span class="visually-hidden">{{ 'templates.wishlist.wishlist' | t }}</span>
      </a>

      <a href="{{ routes.cart_url }}" class="cart-icon link focus-inset" id="cart-icon-bubble">
        <span class="svg-wrapper">
          {{- 'icon-cart-koibird.svg' | inline_asset_content -}}
        </span>
        <span class="visually-hidden">{{ 'templates.cart.cart' | t }}</span>
        {%- if cart != empty -%}
          <div class="cart-count-bubble">
            {%- if cart.item_count < 100 -%}
              <span aria-hidden="true">{{ cart.item_count }}</span>
            {%- endif -%}
            <span class="visually-hidden">{{ 'sections.header.cart_count' | t: count: cart.item_count }}</span>
          </div>
        {%- endif -%}
      </a>
    </div>
  </div>
  <!-- /mobile header -->

  <!-- Desktop Header -->
  <div class="container header__container header__container--desktop">
    <div class="header__content page-width">
      <div class="header__search">
        <div class="input__wrapper">
          <span class="svg-wrapper">
            {{- 'icon-search.svg' | inline_asset_content -}}
          </span>
          <input type="text">
        </div>
      </div>
      {%- if request.page_type == 'index' -%}
        <h1 class="header__heading">
      {%- endif -%}
      <a href="{{ routes.root_url }}" class="header__heading-link link link--text focus-inset">
        {%- if settings.logo != blank -%}
          {%- assign logo_alt = settings.logo.alt | default: shop.name | escape -%}
          {%- assign logo_height = settings.logo_width | divided_by: settings.logo.aspect_ratio -%}
          {% capture sizes %}(max-width: {{ settings.logo_width | times: 2 }}px) 50vw, {{ settings.logo_width }}px{% endcapture %}
          <img
            class="header__logo"
            src="{{ settings.logo | image_url }}"
            alt="{{ logo_alt }}"
            width="{{ settings.logo_width }}"
            height="{{ logo_height }}"
            sizes="{{ sizes }}"
            loading="lazy"
          >
        {%- else -%}
          <span class="h2">{{ shop.name }}</span>
        {%- endif -%}
      </a>
      {%- if request.page_type == 'index' -%}
        </h1>
      {%- endif -%}
      {% render 'header-action' %}
    </div>
    {%- if section.settings.menu != blank %}
      <div class="navbar-wrapper page-width">
        {% if section.settings.show_navbar %}
          {% render 'header-dropdown-menu' %}
        {% endif %}
      </div>
    {%- endif %}
  </div>
  <!-- /desktop header -->
</header>

{%- if settings.cart_type == 'notification' -%}
  {%- render 'cart-notification', color_scheme: section.settings.color_scheme, desktop_menu_type: 'dropdown' -%}
{%- endif -%}

{% javascript %}
  class StickyHeader extends HTMLElement {
    constructor() {
      super();
    }

    connectedCallback() {
      this.header = document.querySelector('.section-header');
      this.headerIsAlwaysSticky =
        this.getAttribute('data-sticky-type') === 'always' ||
        this.getAttribute('data-sticky-type') === 'reduce-logo-size';
      this.headerBounds = {};

      this.setHeaderHeight();

      window.matchMedia('(max-width: 1024px)').addEventListener('change', this.setHeaderHeight.bind(this));

      if (this.headerIsAlwaysSticky) {
        this.header.classList.add('shopify-section-header-sticky');
      }

      this.currentScrollTop = 0;
      this.preventReveal = false;
      this.predictiveSearch = this.querySelector('predictive-search');

      this.onScrollHandler = this.onScroll.bind(this);
      this.hideHeaderOnScrollUp = () => (this.preventReveal = true);

      this.addEventListener('preventHeaderReveal', this.hideHeaderOnScrollUp);
      window.addEventListener('scroll', this.onScrollHandler, false);

      this.createObserver();
    }

    setHeaderHeight() {
      document.documentElement.style.setProperty('--header-height', `${this.header.offsetHeight}px`);
    }

    disconnectedCallback() {
      this.removeEventListener('preventHeaderReveal', this.hideHeaderOnScrollUp);
      window.removeEventListener('scroll', this.onScrollHandler);
    }

    createObserver() {
      let observer = new IntersectionObserver((entries, observer) => {
        this.headerBounds = entries[0].intersectionRect;
        observer.disconnect();
      });

      observer.observe(this.header);
    }

    onScroll() {
      const scrollTop = window.pageYOffset || document.documentElement.scrollTop;

      if (this.predictiveSearch && this.predictiveSearch.isOpen) return;

      if (scrollTop > this.currentScrollTop && scrollTop > this.headerBounds.bottom) {
        this.header.classList.add('scrolled-past-header');
        if (this.preventHide) return;
        requestAnimationFrame(this.hide.bind(this));
      } else if (scrollTop < this.currentScrollTop && scrollTop > this.headerBounds.bottom) {
        this.header.classList.add('scrolled-past-header');
        if (!this.preventReveal) {
          requestAnimationFrame(this.reveal.bind(this));
        } else {
          window.clearTimeout(this.isScrolling);

          this.isScrolling = setTimeout(() => {
            this.preventReveal = false;
          }, 66);

          requestAnimationFrame(this.hide.bind(this));
        }
      } else if (scrollTop <= this.headerBounds.top) {
        this.header.classList.remove('scrolled-past-header');
        requestAnimationFrame(this.reset.bind(this));
      }

      this.currentScrollTop = scrollTop;
    }

    hide() {
      if (this.headerIsAlwaysSticky) return;
      this.header.classList.add('shopify-section-header-hidden', 'shopify-section-header-sticky');
      this.closeMenuDisclosure();
      this.closeSearchModal();
    }

    reveal() {
      if (this.headerIsAlwaysSticky) return;
      this.header.classList.add('shopify-section-header-sticky', 'animate');
      this.header.classList.remove('shopify-section-header-hidden');
    }

    reset() {
      if (this.headerIsAlwaysSticky) return;
      this.header.classList.remove('shopify-section-header-hidden', 'shopify-section-header-sticky', 'animate');
    }

    closeMenuDisclosure() {
      this.disclosures = this.disclosures || this.header.querySelectorAll('header-menu');
      this.disclosures.forEach((disclosure) => disclosure.close());
    }

    closeSearchModal() {
      this.searchModal = this.searchModal || this.header.querySelector('details-modal');
      this.searchModal.close(false);
    }
  }

  customElements.define('sticky-header', StickyHeader);
{% endjavascript %}

<script type="application/ld+json">
  {
    "@context": "http://schema.org",
    "@type": "Organization",
    "name": {{ shop.name | json }},
    {% if settings.logo %}
      "logo": {{ settings.logo | image_url: width: 500 | prepend: "https:" | json }},
    {% endif %}
    "sameAs": [
      {{ settings.social_twitter_link | json }},
      {{ settings.social_facebook_link | json }},
      {{ settings.social_pinterest_link | json }},
      {{ settings.social_instagram_link | json }},
      {{ settings.social_tiktok_link | json }},
      {{ settings.social_tumblr_link | json }},
      {{ settings.social_snapchat_link | json }},
      {{ settings.social_youtube_link | json }},
      {{ settings.social_vimeo_link | json }}
    ],
    "url": {{ request.origin | append: page.url | json }}
  }
</script>

{%- if request.page_type == 'index' -%}
  {% assign potential_action_target = request.origin | append: routes.search_url | append: '?q={search_term_string}' %}
  <script type="application/ld+json">
    {
      "@context": "http://schema.org",
      "@type": "WebSite",
      "name": {{ shop.name | json }},
      "potentialAction": {
        "@type": "SearchAction",
        "target": {{ potential_action_target | json }},
        "query-input": "required name=search_term_string"
      },
      "url": {{ request.origin | append: page.url | json }}
    }
  </script>
{%- endif -%}

{% schema %}
{
  "name": "t:sections.header.name",
  "class": "section-header",
  "settings": [
    {
      "type": "header",
      "content": "t:sections.header.settings.logo_help.content"
    },
    {
      "type": "link_list",
      "id": "menu",
      "label": "t:sections.header.settings.menu.label"
    },
    {
      "type": "checkbox",
      "id": "show_navbar",
      "label": "t:sections.header.settings.show_navbar.label",
      "default": true
    }
  ]
}
{% endschema %}
